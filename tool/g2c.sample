package G2C;

message SystemMessage {
	required Result res = 2;

	enum Result {
		TRUE = 1;
		INVALID_ACCOUNT	= 2;
		UNDEFINED_FIELD	= 3;
		EXISTED_ACCOUNT	= 4;
		BLOCKED_ACCOUNT	= 5;
		DUPLICATED_LOGIN = 6;
		INVALID_CHARACTER = 7;
		INVALID_ITEM = 9;
		NOT_ENOUGH_ENERGY = 10;
		NOT_ENOUGH_COIN = 11;
		NOT_ENOUGH_MONEY = 12; 
		NO_MATCH_WITH_DB = 13;
		INVALID_BATON = 14;
		INVALID_BATON_RESULT = 15;
		INVALID_ENERGY = 16;
		FULLY_UPGRADED = 17;
		FAILED_DB_UPDATE = 18;
		INVALID_SESSION = 19;
		INVALID_COSTUME_CATEGORY = 20;
		INVALID_COSTUME_ID = 21;
		PURCHASE_FIRST = 22;
		INVALID_UPGRADE = 23;
		NOT_ENOUGH_DRAW = 24;
		INVALID_GHOST = 25;
		CAN_NOT_PURCHASE = 26;
		INVALID_ROOM = 27;
	}
} // end

message VersionInfoReply {
	required string version = 2;
} // end

message RegisterAccountReply {
} // end

message UnregisterAccountReply {
} // end

message SelectCharacterReply {
} // end

message StartGameReply {
	required int32 energy = 2;
	required int64 last_charged_time = 3;
	repeated Item used_item_list = 4;

	message Item {
		required int32 id = 1;
		required bool on = 2;
		required int32 rest = 3;
	}
} // end

message AccountInfo {
	required int32 lv = 2;
	required int32 exp = 3;
	required int32 coin = 4;
	required int32 money = 5;
	required int32 energy = 6;
	required int64 last_charged_time = 7;
	required int32 selected_character = 8;
	required int32 score_factor = 9;
	required int32 time_factor = 10;
	required int32 cooldown_factor = 11;
	required int32 shield = 12;
	required int32 item_last = 13;
	required int32 ghostify = 14;
	required int32 immortal = 15;
	required int32 exp_boost = 16;
	required int32 random = 17;
	required int32 mileage = 18;
	required int32 draw = 19;
	repeated CharacterInfo characters = 20;

	message CharacterInfo {
		required int32 id = 1;
		required int32 level = 2;
	}
} // end

message LogoutReply {
} // end

message ChargeInfo {
	required int32 energy = 2;
	required int64 last_charged_time = 3;
} // end

message RankInfo {
	required int64 overall_ranking = 2;
	repeated FriendRankInfo ranking_list = 3;
	
	message FriendRankInfo {
		required string k_id = 1;
		required int32 score = 2;
		required bool energy_sended = 3;
	}
} // end

message PostedEnergy {
	repeated Energy energy = 2;

	message Energy {
		required string sender_k_id = 1;
		required int64 sended_time = 2;
	}
} // end

message PostedBaton {
	repeated Baton baton = 2;

	message Baton {
		required string sender_k_id = 1;
		required string map_name = 2;
		required int32 last_score = 3;
		required int64 sended_time = 4;
	}
} // end

message PostedBatonResult {
	repeated BatonResult baton_result = 2;
	
	message BatonResult {
		required string sender_k_id = 1;
		required int32 acquisition_score = 2;
		required int64 sended_time = 3;
	}
} // end

message GameResult {
	required int32 score = 2;
	required int32 coin = 3;
	required int32 bonus_score = 4;
	required int32 total_score = 5;
	required int32 level = 6;
	required int32 exp = 7;
	required int32 total_coin = 8;
	required int32 mileage = 9;
	required int32 draw = 10;
} // end

message BuyItemReply {
	required Item item = 2;
	required int32 coin = 3;

	enum Item {
		SHIELD = 1;
		ITEM_LAST = 2;
		GHOSTIFY = 3;
		IMMORTAL = 4;
		EXP_BOOST = 5;
		MAX_ATTACK = 6;
		BONUS_HEART = 7;
		DROP_UP = 8;
		MAGNET = 9;
		BONUS_SCORE = 10;
		MAX = 11;
	}
} // end 

message BuyOrUpgradeCharacterReply {
	required int32 character = 2;
	required int32 lv = 3;
	required int32 coin = 4;
	required int32 money = 5;
	required int32 mileage = 6;
	required int32 draw = 7;
} // end

message SendEnergyReply {
	required int32 mileage = 2;
	required int32 draw = 3;
} // end

message RequestBatonReply {
	required int32 coin = 2;
} // end

message AcceptEnergyReply {
	required int32 energy = 2;
} // end

message AcceptBatonReply {
} // end

message BatonResult {
	required int32 coin = 2;
	required int32 total_coin = 3;
	required bool update = 4;
} // end

message AcceptBatonResultReply {
	required bool update = 2;
	required int32 score = 3;
} // end

message UpgradeFactorReply {
	required int32 coin = 2;
	required int32 mileage = 3;
	required int32 draw = 4;
} // end

message InviteFriendReply {
	required int32 invite_count = 2;
	required int32 mileage = 3;
	required int32 draw = 4;
} // end

message LoadRewardReply {
	required Reward reward = 2;

	enum Reward {
		INVITE_10_REWARD = 1;
		INVITE_15_REWARD = 2;
		INVITE_30_REWARD = 3;
		MAX = 4;
	}
} // end

message BuyCostumeReply {
	required int32 costume_id = 2;
	required int32 coin = 3;
	required int32 money = 4;
	required int32 mileage = 5;
	required int32 draw = 6;
} // end

message WearCostumeReply {
	required int32 costume_id = 2;
} // end

message DrawFirstReply {
	required Draw pick = 2;
	repeated Draw draw_list = 3;

	message Draw {
		required bool is_ghost = 1;
		required int32 id = 2;
	}
} // end

message DrawSecondReply {
	required Draw pick = 2;

	message Draw {
		required bool is_ghost = 1;
		required int32 id = 2;
	}
} // end

message EquipGhostReply {
	required int32 room_number = 2;
	required int32 ghost_id = 3;
} // end

message UnequipGhostReply {
	required int32 room_number = 2;
} // end

message PurchaseRoomReply {
	required int32 room_number = 2;
} // end
