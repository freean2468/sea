package G2C;

enum Result {
	TRUE = 1;
	INVALID_ACCOUNT	= 2;
	UNDEFINED_FIELD	= 3;
	EXISTED_ACCOUNT	= 4;
	BLOCKED_ACCOUNT	= 5;
	DUPLICATED_LOGIN = 6;
	INVALID_CHARACTER = 7;
	INVALID_ASSISTANT = 8;
	INVALID_ITEM = 9;
	NOT_ENOUGH_ENERGY = 10;
	NOT_ENOUGH_COIN = 11;
	NO_MATCH_WITH_DB = 12;
	INVALID_REQ_FIELD = 13;
	INVALID_BATON = 14;
	INVALID_BATON_RESULT = 15;
	INVALID_ENERGY = 16;
	FULLY_UPGRADED = 17;
	FAILED_DB_UPDATE = 18;
	INVALID_SESSION = 19;
}

enum Update {
	SUCCESS = 1;
	FAIL = 2;
}

message SystemMessage {
	optional uint64 id = 1 [default=131068445];
	required Result res = 2;
} // end

message VersionInfoReply {
	optional uint64 id = 1 [default=1089076202];
	required string version = 2;
} // end

message RegisterAccountReply {
	optional uint64 id = 1 [default=3142601];
} // end

message SelectCharacterReply {
	optional uint64 id = 1 [default=54132717];
} // end

message StartGameReply {
	optional uint64 id = 1 [default=379718615];
	required int32 energy = 2;
	required int64 last_charged_time = 3;
} // end

message AccountInfo {
	optional uint64 id = 1 [default=167638434];
	required int32 coin = 2;
	required int32 mineral = 3;
	required int32 lv = 4;
	required int32 exp = 5;
	required int32 point = 6;
	required int32 energy = 7;
	required int64 last_charged_time = 8;
	required int32 selected_character = 9;
	required int32 score_factor = 10;
	required int32 time_factor = 11;
	required int32 cooldown_factor = 12;
	required int32 shield = 13;
	required int32 item_last = 14;
	required int32 ghost = 15;
	required int32 weapon_reinforce = 16;
	required int32 exp_boost = 17;
	required int32 max_attack = 18;
	required int32 bonus_heart = 19;
	required int32 drop_up = 20;
	required int32 magnet = 21;
	required int32 bonus_score = 22;
	required int32 mileage = 23;
	required int32 draw = 24;
	repeated CharacterInfo characters = 25;

	enum ID {
		ONE = 1;
		TWO = 2;
		THREE = 3;
		FOUR = 4;
		MAX = 5;
	}

	message CharacterInfo{
		required ID id = 1;
		required int32 level = 2;
	}
} // end

message LogoutReply {
	optional uint64 id = 1 [default=17627005];
} // end

message ChargeInfo {
	optional uint64 id = 1 [default=158203204];
	required int32 energy = 2;
	required int64 last_charged_time = 3;
} // end

message RankInfo {
	optional uint64 id = 1 [default=614723670];
	required int64 overall_ranking = 2;
	repeated FriendRankInfo ranking_list = 3;
	
	message FriendRankInfo {
		required string k_id = 1;
		required int32 score = 2;
		required int32 bonus_sended = 3;
	}
} // end

message PostedEnergy {
	optional uint64 id = 1 [default=128773];
	repeated Energy bonus = 2;

	message Energy {
		required string sender_k_id = 1;
		required int64 sended_time = 2;
	}
} // end

message PostedBaton {
	optional uint64 id = 1 [default=12122398];
	repeated Baton baton = 2;

	message Baton {
		required string sender_k_id = 1;
		required string map_name = 2;
		required int32 last_score = 3;
		required int64 sended_time = 4;
	}
} // end

message PostedBatonResult {
	optional uint64 id = 1 [default=4128312];
	repeated BatonResult baton_result = 2;
	
	message BatonResult {
		required string sender_k_id = 1;
		required int32 acquisition_score = 2;
		required int64 sended_time = 3;
	}
} // end

message GameResult {
	optional uint64 id = 1 [default=7140324];
	required int32 score = 2;
	required int32 coin = 3;
	required int32 bonus_score = 4;
	required int32 total_score = 5;
	required int32 level = 6;
	required int32 exp = 7;
	required int32 total_coin = 8;
	required int32 mileage = 9;
	required int32 draw = 10;
} // end

message BuyItemReply {
	optional uint64 id = 1 [default=5177005];
	required Item item = 2;
	required int32 coin = 3;

	enum Item {
		SHIELD = 1;
		ITEM_LAST = 2;
		GHOST = 3;
		WEAPON_REINFORCE = 4;
		EXP_BOOST = 5;
		MAX_ATTACK = 6;
		BONUS_HEART = 7;
		DROP_UP = 8;
		MAGNET = 9;
		BONUS_SCORE = 10;
		MAX = 11;
	}
} // end 

message BuyOrUpgradeCharacterReply {
	optional uint64 id = 1 [default=6158342];
	required Character character = 2;
	required int32 lv = 3;
	required int32 coin = 4;
	required int32 mileage = 5;
	required int32 draw = 6;

	enum Character {
		ONE = 1;
		TWO = 2;
		THREE = 3;
		FOUR = 4;
		MAX = 5;
	}
} // end

message SendEnergyReply {
	optional uint64 id = 1 [default=4191743];
	required int32 mileage = 2;
	required int32 draw = 3;
} // end

message RequestBatonReply {
	optional uint64 id = 1 [default=7207034];
	required int32 coin = 2;
} // end

message AcceptEnergyReply {
	optional uint64 id = 1 [default=9237532];
} // end

message AcceptBatonReply {
	optional uint64 id = 1 [default=91946967];
} // end

message BatonResult {
	optional uint64 id = 1 [default=2226778];
	required int32 coin = 2;
	required int32 total_coin = 3;
	required Update update = 4;
} // end

message AcceptBatonResultReply {
	optional uint64 id = 1 [default=4259364];
	required Update update = 2;
	required int32 score = 3;
} // end

message UpgradeReply {
	optional uint64 id = 1 [default=3273468];
	required int32 coin = 2;
	required int32 mileage = 3;
	required int32 draw = 4;
} // end

message InviteFriendReply {
	optional uint64 id = 1 [default=5242518];
	required int32 invite_count = 2;
	required int32 mileage = 3;
	required int32 draw = 4;
} // end

message LoadRewardReply {
	optional uint64 id = 1 [default=2291302];
	required Reward reward = 2;

	enum Reward {
		INVITE_10_REWARD = 1;
		INVITE_15_REWARD = 2;
		INVITE_30_REWARD = 3;
		MAX = 4;
	}
} // end
